openapi: 3.0.3
info:
  title: Account API
  version: 1.0.0

servers:
  - description: local
    url: http://localhost:8001
  - description: aws
    url: http://server.dfcubidesc.com:8002


paths:
  /v1/accounts:
    post:
      summary: Create account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
    get:
      security:
        - bearerAuth: [ ]
      summary: Get all accounts
      operationId: getAccounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
  /v1/accounts/{email}:
    put:
      security:
        - bearerAuth: [ ]
      summary: Edit account
      operationId: editAccount
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
    get:
      security:
        - bearerAuth: [ ]
      summary: Get account
      operationId: getAccount
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      responses:
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
  /v1/auth/:
    post:
      summary: Authenticate Credentials
      operationId: Authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAuthRequest'
      responses:
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAuthResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AccountRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string

    AccountResponse:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email

    AccountAuthRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AccountAuthResponse:
      type: object
      properties:
        token:
          type: string
        exp:
          type: string

    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
